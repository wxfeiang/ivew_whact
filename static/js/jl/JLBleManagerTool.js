var bleErrorMsg=require("./JLBleErrorMsg.js");var bleCode=require("./errorCode.js");var onfire=require("./onfire.js");var dataTool=require("./dataTool.js");var successCode=bleCode.bleSuccessCode();var errorCode=bleCode.bleErrorCode();var serviceId="FEE7";var charact_serviceId=serviceId;var deviceId;var serviceId;var characticId;var dev;export function scan_StartScanBleDevice(nameFlag,callBack){console.log(serviceId);initBluetoothAdapte(function(res){if(res.code==bleCode.bleSuccessCode()){wx.startBluetoothDevicesDiscovery({services:["FEE7"],success:function(res){wx.onBluetoothDeviceFound(function(res){var devs=[];var scandevices=res.devices;for(var i=0;i<scandevices.length;i++){var scan_dev=scandevices[i];if(nameFlag!=null){if(scan_dev.name.indexOf(nameFlag)!=-1){var objc={device_no:scan_dev.deviceId,device_name:scan_dev.name};devs.push(objc)}}else{if(scan_dev.name.length>0){var objc={device_no:scan_dev.deviceId,device_name:scan_dev.name};devs.push(objc)}}}if(devs.length>0){callBack.call(this,{code:successCode,err_msg:"搜索设备成功",data:devs,msg:""})}})},fail:function(err){var msg="";if(err){msg=bleErrorMsg.bluetoothErrMsg(err.errCode)}callBack.call(this,{code:bleCode.bleErrorCode(),msg:msg,data:null})}})}else{callBack.call(this,res)}})};export function scan_stopScanBleDevice(callBack){wx.stopBluetoothDevicesDiscovery({success:function(res){callBack.call(this,{code:successCode,msg:"停止扫描成功",data:null})},fail:function(err){var msg="";if(err){msg=bleErrorMsg.bluetoothErrMsg(err.errCode)}callBack.call(this,{code:errorCode,msg:msg,data:null})}})};function initBluetoothAdapte(callBack){wx.openBluetoothAdapter({success:function(res){wx.getBluetoothAdapterState({success:function(res){if(res.available==true&&res.discovering==false){callBack.call(this,{code:successCode,msg:"初始化蓝牙模块成功",data:null})}if(res.available==false){callBack.call(this,{code:errorCode,msg:"蓝牙适配器不可用",data:null})}if(res.discovering==true){callBack.call(this,{code:errorCode,msg:"正在搜索设备",data:null})}},fail:function(err){var msg="";if(err){msg=bleErrorMsg.bluetoothErrMsg(err.errCode)}callBack.call(this,{code:errorCode,msg:msg,data:null})}})},fail:function(err){var msg="";if(err){msg=bleErrorMsg.bluetoothErrMsg(err.errCode)}callBack.call(this,{code:errorCode,msg:msg,data:null})}})}function closeBluetoothAdapte(callBack){wx.getBluetoothAdapterState({success:function(res){wx.closeBluetoothAdapter({success:function(res){callBack.call(this,{code:successCode,msg:"关闭蓝牙模块成功",data:null})},fail:function(err){callBack.call(this,{code:errorCode,msg:err.errmsg,data:null})}})},fail:function(err){var msg="";if(err){msg=bleErrorMsg.bluetoothErrMsg(err.errCode)}callBack.call(this,{code:errorCode,msg:msg,data:null})}})}export function connectDevice(device,callBack){dev=device;getConnectedDevice(function(res){if(res.code==bleCode.bleSuccessCode()){wxConnectDevice(function(res){callBack.call(this,res)})}else{callBack.call(this,res)}})};export function disConnectDevice(callBack){wxDisConnectDevice(function(res){callBack.call(this,res)})};export function onDeviceConnectStateChange(callBack){wx.onBLEConnectionStateChange(function(res){callBack.call(this,res)})};function wxConnectDevice(callBack){console.log("dev:"+JSON.stringify(dev));wx.createBLEConnection({deviceId:dev.device_no,success:function(res){callBack.call(this,{code:bleCode.bleSuccessCode(),err_msg:"蓝牙物理连接成功",data:dev,msg:""})},fail:function(err){var msg="";if(err){msg=bleErrorMsg.bluetoothErrMsg(err.errCode)}callBack.call(this,{code:bleCode.bleErrorCode(),err_msg:msg,data:null,msg:""})}})}function getConnectedDevice(callBack){wx.getConnectedBluetoothDevices({services:["fee7"],success:function(res){if(res.devices.length>0){callBack.call(this,{code:bleCode.bleErrorCode(),err_msg:"蓝牙被占用",data:res.services[0],msg:""})}else{callBack.call(this,{code:bleCode.bleSuccessCode(),err_msg:"可连接设备",data:null,msg:""})}},fail:function(err){var msg="";if(err){msg=bleErrorMsg.bluetoothErrMsg(err.errCode)}callBack.call(this,{code:bleCode.bleErrorCode(),err_msg:msg,data:null,msg:""})}})}function wxDisConnectDevice(callBack){if(dev!=null){wx.closeBLEConnection({deviceId:dev.device_no,success:function(res){wx.closeBluetoothAdapter({success:function(res){callBack.call(this,{code:bleCode.bleSuccessCode(),err_msg:"设备断开连接成功",data:null,msg:""})},fail:function(err){callBack.call(this,{code:bleCode.bleErrorCode(),err_msg:"设备断开连接成功,"+err.errmsg,data:null,msg:""})}})},fail:function(err){var msg="";if(err){msg=bleErrorMsg.bluetoothErrMsg(err.errCode)}callBack.call(this,{code:bleCode.bleErrorCode(),err_msg:msg,data:null,msg:""})}})}else{callBack.call(this,{code:bleCode.bleSuccessCode(),err_msg:"暂无设备连接",data:null,msg:""})}}export function findDeviceServices(device,callBack1,callBack2){getDeviceService(device,function(res){getDeviceCharacteristics(device,res.data,function(res1){callBack1.call(this,res1)},function(res2){if(res2.code==bleCode.bleSuccessCode()){wx.onBLECharacteristicValueChange(function(res){callBack2.call(this,{code:bleCode.bleSuccessCode(),err_msg:"特征值发生变化",data:{value:dataTool.bufferTohex(res.value).toLocaleUpperCase()},msg:""})})}else{callBack2.call(this,res2)}})})};function getDeviceService(device,callBack){wx.getBLEDeviceServices({deviceId:device.device_no,success:function(res){var services=res.services;for(var i=0;i<services.length;i++){if("0000FEE7"==res.services[i].uuid.substr(0,8)){callBack.call(this,{code:bleCode.bleSuccessCode(),err_msg:"寻找服务成功",data:res.services[i].uuid,msg:""})}}}})}function getDeviceCharacteristics(device,serviceId,callBack1,callBack2){wx.getBLEDeviceCharacteristics({deviceId:device.device_no,serviceId:serviceId,success:function(res){var charactertics=res.characteristics;for(var i=0;i<charactertics.length;i++){var charact=charactertics[i];if(charact.properties.read==true){wx.readBLECharacteristicValue({deviceId:device.device_no,serviceId:charact_serviceId,characteristicId:charact.uuid,success:function(res){}})}if(charact.properties.write==true){callBack1.call(this,{code:bleCode.bleSuccessCode(),err_msg:null,data:{id:{devId:device.device_no,serId:serviceId,charactId:charact.uuid}},msg:""})}if(charact.properties.notify==true||charact.properties.indicate==true){wx.notifyBLECharacteristicValueChange({deviceId:device.device_no,serviceId:serviceId,characteristicId:charact.uuid,state:true,success:function(res){callBack2.call(this,{code:bleCode.bleSuccessCode(),err_msg:"开启设备监听成功",data:res,msg:""})},fail:function(err){var msg="";if(err){msg=bleErrorMsg.bluetoothErrMsg(err.errCode)}callBack2.call(this,{code:bleCode.bleErrorCode(),err_msg:msg,data:null,msg:""})}})}}}})}export function setParams(id){deviceId=id.devId;serviceId=id.serId;characticId=id.charactId;console.log("params id :"+JSON.stringify(id))};export function sendMessageToDevice(cmdArray,callBack){var cmd=dataTool.strToBuffer(cmdArray[0]);var i=0;wx.writeBLECharacteristicValue({deviceId:deviceId,serviceId:serviceId,characteristicId:characticId,value:cmd,success:function(res){if(i<cmdArray.length-1){console.info("已完成发送第===="+i+"===包====【"+cmd+"】");i++;onfire.fire("send",i)}else{onfire.clear();console.info("所有数据发送完成 共:"+cmdArray.length+"包");callBack.call(this,{code:successCode,err_msg:"数据发送成功",data:cmdArray,msg:""})}},fail:function(err){console.log("writeBLECharacteristicValue fail:"+JSON.stringify(err));var msg="";if(err){msg=bleErrorMsg.bluetoothErrMsg(err.errCode)}callBack.call(this,{code:bleCode.bleErrorCode(),err_msg:msg,data:null,msg:""})}});onfire.on("send",i=>{var cmd1=dataTool.strToBuffer(cmdArray[i]);wx.writeBLECharacteristicValue({deviceId:deviceId,serviceId:serviceId,characteristicId:characticId,value:cmd1,success:function(res){if(i<cmdArray.length-1){console.info("已完成发送第===="+i+"===包====【"+cmd+"】");i++;onfire.fire("send",i)}else{onfire.clear();console.info("所有数据发送完成 共:"+cmdArray.length+"包");callBack.call(this,{code:successCode,err_msg:"数据发送成功",data:cmdArray,msg:""})}},fail:function(err){console.log("writeBLECharacteristicValue fail:"+JSON.stringify(err));var msg="";if(err){msg=bleErrorMsg.bluetoothErrMsg(err.errCode)}callBack.call(this,{code:bleCode.bleErrorCode(),err_msg:msg,data:null,msg:""})}})})};